#!/usr/bin/env node

const Aws = require('aws-sdk');
const chalk = require('chalk');
const fs = require('fs');
const mkdirp = require('mkdirp');
const { exec } = require('child_process');

const S3 = new Aws.S3({ region: 'ap-northeast-1' });

const s3Params = {
  Bucket: 'ssp-dev-static'
};

let rootDir = 'locales';

S3.listObjectsV2(Object.assign({}, s3Params, { Prefix: 'locales/ssp' }))
  .promise()
  .then(data => {
    const contents = data.Contents.map(d => Object.assign({}, s3Params, { Key: d.Key }));

    Promise.all(
      contents.map(async p => {
        const data = await S3.getObject(p).promise();

        const path = p.Key;
        const lastSlashIndex = path.lastIndexOf('/');
        const dirPath = path.slice(0, lastSlashIndex);
        const fileName = path.slice(lastSlashIndex + 1);

        // create folder if not exist
        if (!fs.existsSync(dirPath)) {
          mkdirp.sync(dirPath);
        }
        // open file to write
        fs.open(path, 'w', (err, fd) => {
          if (err) {
            console.log(err, err.stack);
          }
          fs.write(fd, data.Body, err => {
            if (err) {
              console.log(err, err.stack);
            }
          });
        });
      })
    ).then(done => exec(`zip locales.zip ${rootDir}`));
  });
