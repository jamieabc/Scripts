#!/usr/local/bin/node --harmony

const Aws = require('aws-sdk');
const chalk = require('chalk');
const fs = require('fs');
const mkdirp = require('mkdirp');
const { exec } = require('child_process');

const S3 = new Aws.S3({ region: 'ap-northeast-1' });

const generateSnapshotName = clusterName => clusterName + '-snapshot';
const generateLog = obj => console.log;

const s3Params = {
  Bucket: 'ssp-dev-static'
};

S3.listObjectsV2(Object.assign({}, s3Params, { Prefix: 'locales/ssp' }), (err, data) => {
  if (err) {
    console.log(err, err.stack);
  } else {
    const contents = data.Contents.map(d => Object.assign({}, s3Params, { Key: d.Key }));
    contents.forEach(p =>
      S3.getObject(p, (err, data) => {
        if (err) {
          console.log(err, err.stack);
        } else {
          const path = p.Key;
          const lastSlashIndex = path.lastIndexOf('/');
          const dirPath = path.slice(0, lastSlashIndex);
          const fileName = path.slice(lastSlashIndex + 1);

          // create folder if not exist
          if (!fs.existsSync(dirPath)) {
            mkdirp.sync(dirPath);
          }
          // open file to write
          fs.open(path, 'w', (err, fd) => {
            if (err) {
              console.log(err, err.stack);
            }
            fs.write(fd, data.Body, err => {
              if (err) {
                console.log(err, err.stack);
              }
            });
          });
        }
      })
    );
  }
});
