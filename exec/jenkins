#!/usr/bin/env node

let jobName;

// jenkins STATE mapping
const STATE = {
  success: 'SUCCESS',
  fail: 'FAILURE'
};

const jobNameIdx = process.argv.length - 1;

// return if no any job given
if (process.argv.length > 2) {
  jobName = encodeURIComponent(process.argv[jobNameIdx]);
} else {
  console.log('Please input job name as the last argument.');
  process.exit(-1);
}

const parseArgs = require('minimist');
const jenkinsApi = require('jenkins-api');
const jenkins = jenkinsApi.init(
  'http://aaron.chang:e7f027575923246f50066e69410cc766@jenkins.quadas.com'
);

const formatLine = line => line.split('\n').join('\n');

const argv = parseArgs(process.argv);

let root = argv.r;
let project = argv.p;
let category = argv.c;

// assign variables
if (argv.t === 'dsp') {
  root = 'Frontend';
  project = 'DSP';
} else if (argv.t === 'ssp-api') {
  root = 'Frontend';
  project = 'SSP';
  category = 'web-api';
} else if (argv.t === 'ssp-ui') {
  root = 'Frontend';
  project = 'SSP';
  category = 'web-ui';
}

const path = [root, project, , category, jobName].filter(item => item).join('/job/');
console.log(`path: ${path}\n`);

// http://jenkins.quadas.com/job/Frontend/job/DSP/job/d%252F18887-rails-wrong-primary-key-of-redshift/

// get all builds of jenkins
setInterval(
  () =>
    jenkins.all_builds(path, (err, data) => {
      if (err) {
        console.log(err, err.stack);
      }

      const lastBuild = data[0];

      // reutrn if http status code not 2xx
      if (data.statusCode >= 300) {
        process.exit(0);
      }

      console.log('\n*** start query ***');
      const lastSuccessBuild = data.filter(build => build.result === STATE.success)[0] || {
        id: null
      };
      const successBuildDifferent = lastBuild.id !== lastSuccessBuild.id;

      if (successBuildDifferent) {
        console.log('build ongoing...\n');
        console.log('last success build id: ', lastSuccessBuild.id);
      }
      console.log('\nlast build: ', lastBuild);

      // do somehting if there's any result
      if (lastBuild.result) {
        jenkins.console_output(path, lastBuild.id, (err, data) => {
          if (err) {
            console.log(err);
          }

          if (lastBuild.result === STATE.success) {
            // Untagged: registry.quadas.com:5002/dsp/web-feature/mchang:24\n
            const dockerRegistryReg = /Untagged: (.*)\n/;
            const pushDockerImage = data.body.includes('Pushed');
            const registry = dockerRegistryReg.exec(data.body);

            // some builds may not generate docker
            if (registry && pushDockerImage) {
              console.log('\ndocker registry: ', dockerRegistryReg.exec(data.body)[1]);
            } else {
              console.log(
                `\n${path} build #${lastBuild.id} success without docker image generated`
              );
            }
          } else if (lastBuild.result === STATE.fail) {
            console.log(formatLine(data.body));
            console.log(data.body.replace('\n', '\n'));
          }
        });
      }
    }),
  10000
);
