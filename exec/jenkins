#!/usr/bin/env node

let jobName;
const jobNameIdx = 2;

if (process.argv.length === 3) {
  jobName = encodeURIComponent(process.argv[jobNameIdx]);
} else {
  console.log('Please input job name.');
  process.exit(-1);
}

// jenkins STATE mapping
const STATE = {
  success: 'SUCCESS',
  fail: 'FAILURE'
};

const jenkinsApi = require('jenkins-api');
const jenkins = jenkinsApi.init(
  'http://aaron.chang:e7f027575923246f50066e69410cc766@jenkins.quadas.com'
);

const root = 'Frontend';
const category = 'DSP';
const path = [root, category, jobName].join('/job/');

// http://jenkins.quadas.com/job/Frontend/job/DSP/job/d%252F18887-rails-wrong-primary-key-of-redshift/

// get all builds of jenkins
jenkins.all_builds(path, (err, data) => {
  if (err) {
    console.log(err, err.stack);
  }

  const lastBuild = data[0];
  const lastSuccessBuild = data.filter(
    build => build.result === STATE.success
  )[0] || { id: null };
  const successBuildDifferent = lastBuild.id !== lastSuccessBuild.id;

  if (successBuildDifferent) {
    console.log('build ongoing...\n');
    console.log('last success build id: ', lastSuccessBuild.id);
  }
  console.log('\nlast build: ', lastBuild);

  // do somehting if there's any result
  if (lastBuild.result) {
    jenkins.console_output(path, lastBuild.id, (err, data) => {
      if (err) {
        console.log(err);
      }

      if (lastBuild.result === STATE.success) {
        // Untagged: registry.quadas.com:5002/dsp/web-feature/mchang:24\n
        const dockerReg = /Untagged: (.*)\n/;
        console.log('\ndocker: ', dockerReg.exec(data.body)[1]);
      } else if (lastBuild.result === STATE.fail) {
        console.log(data.body.split('\n').join('\n'));
        console.log(data.body.replace('\n', '\n'));
      }
    });
  }
});
