#!/usr/local/bin/bash
set -e

conf_dir="conf"
bitcoin_config="${HOME}/${conf_dir}/bitcoin.conf"

# stop existing running bitmarkd
while pgrep bitmarkd >/dev/null
do
    echo stopping bitmarkd...
    pkill bitmarkd

    # wait 5 seconds to check
    echo checking...
    sleep 5
done
echo all bitmarkd are stopped

# compile bitmarkd
package="github.com/bitmark-inc/bitmarkd"
package_dir="${GOPATH}/src/${package}"
bin_dir="${GOPATH}/bin"
bitmarkd_dir="${GOPATH}/src/${package}/command/bitmarkd"

# remove existing bitmarkd
go clean "${package}"
rm -r "${package_dir}" || true
rm "${GOPATH}/bin/bitmarkd" "${GOPATH}/bin/bitmark-cli" "${GOPATH}/bin/bitmark-info" "${GOPATH}/bin/bitmark-dumpdb" || true

# download latest bitmarkd
echo downloading bitmarkd...
go get -u -v "${package}" || true

echo "entering directory ${package_dir}"
cd "${package_dir}"

# setup third party libraries
echo setup third party libraries
git submodule update --init

# compile
echo compiling...
go build -v ./...
go install -v ./...
if [ ! -f "${bin_dir}/bitmarkd" ]; then
    echo bitmarkd build fail...
    exit -1
else
    echo bitmarkd build success
fi

# create data directory if not exist
data_dir="${HOME}/.config"
if [ ! -d "${data_dir}" ]; then
    mkdir -p "${data_dir}"
fi

# generate bitmarkd config
echo "generating bitmarkd configurations..."
array=("1" "2" "3" "4" "5")
for number in "${array[@]}"
do
    # due to new bitcoin config, there exist some problem parsing bitcoin rpc port
    # disable following line for now
    echo skip generating new...
    # ~/bin/generate-bitmarkd-configuration -c local -n freebuilder.bitmark.lan -b "${HOME}/conf/bitcoin.conf" -l "${HOME}/conf/litecoin.conf" -u "${number}"

    # remove data directory if exist, make sure every time a clean start
    if [ -d "${HOME}/.config/bitmarkd${number}/data" ]; then
        echo "removing bitmarkd ${number} data/log directory"
        rm -r "${HOME}/.config/bitmarkd${number}/data"
    fi
done
